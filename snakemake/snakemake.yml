# You may provide default values for environment variable. They will only be
# used if the variable is undefined in the current environment.
#default_env:
#    TMPDIR: /home/user/tmp

# You may also override values in the environment.
#override_env:
#    LANG:   C


# --- Environment variables substitution ---
#
# Environment variables may be referenced in the config via `$VARNAME` or
# `${VARNAME}`; to get a literal dollar sign use `$$`. Values in `deafult_env`
# `override_env` are expanded with the unmodified environment.
#
# Beware, if using environment variables in `dentist_config` the data type
# must be correct, e.g. you cannot pass `read-coverage` be environment
# variable because it will be a string but a float is expected. Still, if you
# specify values via `env` in the config then they will keep their data type,
# so the following will work:
#
#     override_env:
#         COV: 30.0
#     dentist_config:
#         __default__:
#             read-coverage: $COV


# Uncomment the follow workflow flags to alter the workflow

# Add the validation report and weak coverage mask to the list of default
# targets so they will be generated wether or not they are required to build
# the main target (gap-closed assembly)
#full_validation: true

# By default the closed gaps will be validated and only valid gaps will be
# included into the final gap-closed assembly. Give this flag to get the
# raw gap-closed assembly as final output.
#no_purge_output: true


inputs:
    # The reference assembly where gaps should be closed
    reference:          reference.fasta
    # The set of long reads used for gap closing
    reads:              reads.fasta
    # Type of reads. Use `PACBIO_SMRT` or `OXFORD_NANOPORE`. See README for
    # more details on the subject.
    reads_type:         PACBIO_SMRT

outputs:
    # The gap-closed reference assembly
    output_assembly:    gap-closed.fasta
    # JSON file with a validation report for each closed gap
    #validation_report:  $workdir/validation-report.json

# This will be used to generate a config file for dentist. Vital parameters
# and options are automatically inserted by the workflow.
dentist_config:
    __default__:
        read-coverage:      73.0
        ploidy:             2
        max-coverage-self:  3
        verbose:            2
    validate-regions:
        # Uncomment to following two lines if the default value
        # (0.5 * --read-coverage/--ploidy) is suboptimal. It is important to
        # revert --read-coverage and --ploidy because they are
        # mutually exclusive with --min-coverage-reads.
        #min-coverage-reads: 5
        #revert: "read-coverage,ploidy"
    output:
        fasta-line-width:   80

additional_options:
    reference_dbsplit:
        # Adjust `-l` of `ref_vs_reads_alignment` accordinly
        # if `-x < 1500` (default value of `-l` of `daligner`)
        - -x1000
        - -a
    reads_dbsplit:
        - -x1000
        - -a
    # Uncomment and adjust any of the following you need them

    # Improve alignment performance by masking low complexity regions
    # using DBdust
    #reference_dust: []

    # Alignment of the reference assembly against itself for repeat detection
    # using daligner
    #self_alignment: []

    # Alignment of the reference assembly against itself for tandem repeat
    # detection using datander
    #tandem_alignment: []

    # Tandem repeat detection using TANmask
    #tanmask: []

    # Alignment of the reads against the reference for identifying reads for
    # gap closing using damapper
    ref_vs_reads_alignment:
        # Choose the same value as for `-x` of `reference_dbsplit`
        # if `-x < 1500` (default value for `-l` of `daligner`);
        # otherwise some contigs will not be included in the
        # gap-closed assembly beacause there are no alignments.
        - -l1000

    # Improve alignment performance by masking low complexity regions
    # using DBdust
    #reads_dust: []

    # Alignment of the reads against themselves before building a consensus
    # using daligner
    #reads_vs_reads_alignment: []

    # Alignment of the consensus (sequence inserted into the gaps) against
    # the flanking contigs for validation and exact splicing using daligner
    #consensus_alignment: []

    # Options for building the consensus (sequence inserted into the gaps)
    # using daccord
    #consensus: []

# Directories for intermediate and log files.
workdir:            workdir
logdir:             logs

# Workflow files that are created inside of workdir; uncomment and adjust if
# you feel the need
#workflow:
#    config:             dentist.json
#    self_mask:          dentist-self
#    reads_mask:         dentist-reads
#    pile_ups:           pile-ups.db
#    insertions_batch:   insertions/batch.{batch_id}.db
#    insertions:         insertions.db
#    closed_gaps_mask:   closed-gaps
#    weak_coverage_mask: dentist-weak-coverage

# Maximum number of threads to use
max_threads:        8

# Number of threads to use for auxiliary commands such as daligner or daccord.
# Defaults to max(1, threads // 4)
#auxiliary_threads: 1

# Insertions are generated in batches of `batch_size`; use lower number to
# shorten the runtime of each job while increasing the number of jobs.
batch_size:         50

# Validation is split into this number of similar-sized parts of the
# gap-closed vs reads alignment. If the number of blocks is higher than the
# number of contigs in the gap-closed assembly then some validation runs will
# do nothing.
validation_blocks:  32
